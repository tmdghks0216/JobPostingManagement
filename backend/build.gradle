plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
def frontendDir = "${projectDir}/frontend"
def isWindows = System.getProperty("os.name").toLowerCase().contains("windows")

task installFrontend(type: Exec) {
	workingDir frontendDir
	commandLine isWindows ? ["cmd", "/c", "npm", "install"] : ["npm", "install"]
	standardOutput = System.out
	errorOutput    = System.err
}

task buildFrontend(type: Exec) {
	dependsOn installFrontend
	workingDir frontendDir
	commandLine isWindows ? ["cmd", "/c", "npm", "run", "build"] : ["npm", "run", "build"]
	standardOutput = System.out
	errorOutput    = System.err
}

task copyFrontend(type: Copy) {
	dependsOn buildFrontend
	from("${frontendDir}/build")
	into("${projectDir}/src/main/resources/static")
}

tasks.named("processResources") {
	dependsOn(copyFrontend)
}
